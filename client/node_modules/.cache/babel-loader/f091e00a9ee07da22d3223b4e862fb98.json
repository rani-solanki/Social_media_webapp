{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport { Spinner } from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \" Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: repo.html_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, repo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: propTypes.func.isRequired,\n  repos: propTypes.array.isRequired,\n  username: propTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","propTypes","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","html_url","name","_id","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUH,EAAAA,cAAV;AAAyBI,EAAAA;AAAzB,CAAD,KAAqC;AAAA;;AACvDP,EAAAA,SAAS,CAAC,MAAI;AACdG,IAAAA,cAAc,CAACG,QAAD,CAAd;AACH,GAFY,EAEX,CAACH,cAAD,CAFW,CAAT;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACH;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAEFI,KAAK,KAAK,IAAV,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACV;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA,6BACI;AAAA,+BACI;AAAG,UAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,UAAA,MAAM,EAAC,QAA/B;AAAwC,UAAA,GAAG,EAAC,qBAA5C;AAAA,oBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUF,IAAI,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA,YADJ,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CAnBD;;GAAMP,a;;KAAAA,a;AAqBNA,aAAa,CAACJ,SAAd,GAA0B;AACtBE,EAAAA,cAAc,EAAGF,SAAS,CAACY,IAAV,CAAeC,UADV;AAEtBP,EAAAA,KAAK,EAAGN,SAAS,CAACc,KAAV,CAAgBD,UAFF;AAGtBR,EAAAA,QAAQ,EAAGL,SAAS,CAACe,MAAV,CAAiBF;AAHN,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,KAAK,EAAGW,KAAK,CAACC,OAAN,CAAcZ;AADQ,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAiB;AAACd,EAAAA;AAAD,CAAjB,CAAP,CAA0CE,aAA1C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getGithubRepos} from '../../actions/profile';\nimport {Spinner} from '../layout/Spinner';\n\n\nconst ProfileGithub = ({username,getGithubRepos,repos}) => {\n    useEffect(()=>{\n    getGithubRepos(username)\n},[getGithubRepos])\n    return <div className=\"profile-github\">\n        <h2 className='text-primary my-1'> Github Repos</h2>\n        {repos === null ? <Spinner/> : (\n            repos.map(repo => (\n                <div key={repo._id} className='repo bg-white p-1 my-1'>\n                    <h4>\n                        <a href={repo.html_url} target='_blank' rel=\"noopener noreferrer\">\n                            {repo.name}\n                        </a>\n                    </h4>\n\n                </div>\n            ))\n        )}\n    </div>\n}\n\nProfileGithub.propTypes = {\n    getGithubRepos : propTypes.func.isRequired,\n    repos : propTypes.array.isRequired,\n    username : propTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n    repos : state.profile.repos\n})\n\nexport default connect(mapStateToProps,{getGithubRepos})(ProfileGithub)\n"]},"metadata":{},"sourceType":"module"}