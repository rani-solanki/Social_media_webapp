{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 42\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 55\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  profile: propTypes.object.isRequired\n};\n\nconst mapStateTOProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateTOProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","propTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","func","isRequired","object","mapStateTOProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA,iBAAD;AAAmBE,EAAAA,IAAnB;AAAwBC,EAAAA;AAAxB,CAAD,KAAsC;AAAA;;AACpDP,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAOI,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA9B,gBAA2C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlD;AAGH,CARD;;GAAMF,S;;KAAAA,S;AAUNA,SAAS,CAACJ,SAAV,GAAsB;AAClBG,EAAAA,iBAAiB,EAAGH,SAAS,CAACQ,IAAV,CAAeC,UADjB;AAElBJ,EAAAA,IAAI,EAAGL,SAAS,CAACU,MAAV,CAAiBD,UAFN;AAGlBH,EAAAA,OAAO,EAAGN,SAAS,CAACU,MAAV,CAAiBD;AAHT,CAAtB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,IAAI,EAAGO,KAAK,CAACP,IADiB;AAE9BC,EAAAA,OAAO,EAAGM,KAAK,CAACN;AAFc,CAAL,CAA7B;;AAMA,eAAeL,OAAO,CAACU,eAAD,EAAiB;AAACR,EAAAA;AAAD,CAAjB,CAAP,CAA6CC,SAA7C,CAAf","sourcesContent":["import React,{Fragment, useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport {getCurrentProfile} from '../../actions/profile';\nconst Dashboard = ({getCurrentProfile,auth,profile}) => {\n    useEffect(()=>{\n        getCurrentProfile();\n    },[]);\n\n    return loading && profile === null ? <Spinner/> : <Fragment>\n        test\n    </Fragment>\n}\n\nDashboard.propTypes = {\n    getCurrentProfile : propTypes.func.isRequired,\n    auth : propTypes.object.isRequired,\n    profile : propTypes.object.isRequired,\n};\n\n\nconst mapStateTOProps = state => ({\n    auth : state.auth,\n    profile : state.profile\n})\n\n\nexport default connect(mapStateTOProps,{getCurrentProfile})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}