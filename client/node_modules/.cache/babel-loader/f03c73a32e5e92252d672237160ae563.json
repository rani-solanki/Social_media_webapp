{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Spinner } from \"../layout/Spinner\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {\n        experience: profile.experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not yet setup a profile, Please add some info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  profile: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","propTypes","Link","connect","Spinner","getCurrentProfile","DashboardActions","Experience","Dashboard","auth","user","profile","loading","name","experience","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AACA,MAAMC,SAAS,GAAG,CAAC;AACfH,EAAAA,iBADe;AAEfI,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFS;AAGfC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHM,CAAD,KAIZ;AAAA;;AACFZ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,SAAOO,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,gBAGH,QAAC,QAAD;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAC6CD,IAAI,IAAIA,IAAI,CAACG,IAD1D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKKF,OAAO,KAAK,IAAZ,gBACG,QAAC,QAAD;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,OAAO,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAMG,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAyBH,CAlCD;;GAAMN,S;;KAAAA,S;AAoCNA,SAAS,CAACP,SAAV,GAAsB;AAClBI,EAAAA,iBAAiB,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBD,UAFL;AAGlBL,EAAAA,OAAO,EAAEV,SAAS,CAACgB,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADoB;AAEhCE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFiB,CAAZ,CAAxB;;AAKA,eAAeR,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAgDG,SAAhD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Spinner } from \"../layout/Spinner\";\nimport { getCurrentProfile } from \"../../actions/profile\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nconst Dashboard = ({\n    getCurrentProfile,\n    auth: { user },\n    profile: { profile, loading }\n}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, [getCurrentProfile]);\n\n    return loading && profile === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <h1 className='large text-primary'>Dashboard</h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i> Welcome {user && user.name}\n            </p>\n            {profile !== null ? (\n                <Fragment>\n                    <DashboardActions />\n                    <Experience experience={profile.experience}/>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <p>\n                        You have not yet setup a profile, Please add some info\n                    </p>\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\n                        Create Profile\n                    </Link>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: propTypes.func.isRequired,\n    auth: propTypes.object.isRequired,\n    profile: propTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}