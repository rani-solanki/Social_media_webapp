{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Spinner } from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 43\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"has\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"has not\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 58\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  profile: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","propTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","user","profile","loading","name","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA,iBAAD;AAAmBE,EAAAA,IAAI,EAAC;AAACC,IAAAA;AAAD,GAAxB;AAA+BC,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAASC,IAAAA;AAAT;AAAvC,CAAD,KAA+D;AAAA;;AAC7ET,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,CAACA,iBAAD,CAFO,CAAT;AAIA,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA+B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA/B,gBAA8C,QAAC,QAAD;AAAA,4BACjD;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADiD,eAEjD;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAC6CD,IAAI,IAAIA,IAAI,CAACG,IAD1D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFiD,EAKhDF,OAAO,KAAK,IAAZ,gBAAmB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAA8C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALE;AAAA;AAAA;AAAA;AAAA;AAAA,UAArD;AAQH,CAbD;;GAAMH,S;;KAAAA,S;AAeNA,SAAS,CAACJ,SAAV,GAAsB;AAClBG,EAAAA,iBAAiB,EAAGH,SAAS,CAACU,IAAV,CAAeC,UADjB;AAElBN,EAAAA,IAAI,EAAGL,SAAS,CAACY,MAAV,CAAiBD,UAFN;AAGlBJ,EAAAA,OAAO,EAAGP,SAAS,CAACY,MAAV,CAAiBD;AAHT,CAAtB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAGS,KAAK,CAACT,IADiB;AAE9BE,EAAAA,OAAO,EAAGO,KAAK,CAACP;AAFc,CAAL,CAA7B;;AAMA,eAAeN,OAAO,CAACY,eAAD,EAAiB;AAACV,EAAAA;AAAD,CAAjB,CAAP,CAA6CC,SAA7C,CAAf","sourcesContent":["import React,{Fragment, useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {Spinner} from '../layout/Spinner';\nimport {getCurrentProfile} from '../../actions/profile';\nconst Dashboard = ({getCurrentProfile,auth:{user},profile:{profile,loading}}) => {\n    useEffect(()=>{\n        getCurrentProfile()\n    },[getCurrentProfile]);\n\n    return loading && profile === null ?( <Spinner/>) : (<Fragment>\n        <h1 className='large text-primary'>Dashboard</h1>\n        <p className='lead'>\n            <i className='fas fa-user'></i> Welcome {user && user.name}\n        </p>\n        {profile !== null ? <Fragment>has</Fragment> : <Fragment>has not</Fragment>}\n    </Fragment>\n     );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile : propTypes.func.isRequired,\n    auth : propTypes.object.isRequired,\n    profile : propTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => ({\n    auth : state.auth,\n    profile : state.profile\n})\n\n\nexport default connect(mapStateToProps,{getCurrentProfile})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}