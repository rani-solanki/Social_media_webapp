{"ast":null,"code":"import _toConsumableArray from\"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_POSTS,POST_ERROR,UPDATE_LIKES,DELETE_POST,ADD_POST,GET_POST,ADD_COMMENT,REMOVE_COMMENT}from'../actions/types';var initialState={posts:[],post:null,loading:true,error:{}};var post=function post(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case GET_POSTS:return _objectSpread(_objectSpread({},state),{},{posts:payload,loading:false});case GET_POST:return _objectSpread(_objectSpread({},state),{},{post:payload,loading:false});case ADD_POST:return _objectSpread(_objectSpread({},state),{},{posts:[payload].concat(_toConsumableArray(state.posts)),loading:false});case DELETE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==payload;}),loading:false});case POST_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,loading:false});case UPDATE_LIKES:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===payload.id?_objectSpread(_objectSpread({},post),{},{likes:payload.likes}):post;})});case ADD_COMMENT:return _objectSpread(_objectSpread({},state),{},{post:_objectSpread(_objectSpread({},state.post),{},{comments:payload})});case REMOVE_COMMENT:return _objectSpread(_objectSpread({},state),{},{post:_objectSpread({},state.post.comments.filter(function(comment){return comment._id!==payload;})),loading:false});default:return state;}};export default post;","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"2WAAA,OAAOA,SAAP,CACOC,UADP,CAEOC,YAFP,CAGOC,WAHP,CAIOC,QAJP,CAKOC,QALP,CAMOC,WANP,CAOOC,cAPP,KAQW,kBARX,CAUA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjBC,IAAI,CAAG,IAFU,CAGjBC,OAAO,CAAE,IAHQ,CAIjBC,KAAK,CAAG,EAJS,CAArB,CAOA,GAAMF,CAAAA,IAAI,CAAE,QAANA,CAAAA,IAAM,EAAgC,IAA/BG,CAAAA,KAA+B,2DAAvBL,YAAuB,IAATM,CAAAA,MAAS,2CACxC,GAAOC,CAAAA,IAAP,CAAwBD,MAAxB,CAAOC,IAAP,CAAaC,OAAb,CAAwBF,MAAxB,CAAaE,OAAb,CAEA,OAAOD,IAAP,EACI,IAAKf,CAAAA,SAAL,CACI,sCACOa,KADP,MAEIJ,KAAK,CAAGO,OAFZ,CAGIL,OAAO,CAAG,KAHd,GAKJ,IAAKN,CAAAA,QAAL,CACI,sCACOQ,KADP,MAEIH,IAAI,CAAGM,OAFX,CAGIL,OAAO,CAAG,KAHd,GAKJ,IAAKP,CAAAA,QAAL,CACI,sCACOS,KADP,MAEIJ,KAAK,EAAIO,OAAJ,4BAAeH,KAAK,CAACJ,KAArB,EAFT,CAGIE,OAAO,CAAE,KAHb,GAKJ,IAAKR,CAAAA,WAAL,CACI,sCACOU,KADP,MAEIJ,KAAK,CAAGI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmB,SAAAP,IAAI,QAAIA,CAAAA,IAAI,CAACQ,GAAL,GAAaF,OAAjB,EAAvB,CAFZ,CAGIL,OAAO,CAAC,KAHZ,GAKJ,IAAKV,CAAAA,UAAL,CACI,sCACOY,KADP,MAEID,KAAK,CAACI,OAFV,CAGIL,OAAO,CAAG,KAHd,GAKJ,IAAKT,CAAAA,YAAL,CACI,sCACOW,KADP,MAEIJ,KAAK,CAAGI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgB,SAAAT,IAAI,QAAIA,CAAAA,IAAI,CAACQ,GAAL,GAAaF,OAAO,CAACI,EAArB,gCAA8BV,IAA9B,MAAmCW,KAAK,CAAGL,OAAO,CAACK,KAAnD,GAA4DX,IAAhE,EAApB,CAFZ,GAIJ,IAAKJ,CAAAA,WAAL,CACI,sCACOO,KADP,MAEIH,IAAI,gCAAOG,KAAK,CAACH,IAAb,MAAmBY,QAAQ,CAACN,OAA5B,EAFR,GAIJ,IAAKT,CAAAA,cAAL,CACI,sCACOM,KADP,MAEIH,IAAI,kBACGG,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CAA2B,SAAAM,OAAO,QAAIA,CAAAA,OAAO,CAACL,GAAR,GAAgBF,OAApB,EAAlC,CADH,CAFR,CAKIL,OAAO,CAAE,KALb,GAOJ,QACI,MAAOE,CAAAA,KAAP,CAlDR,CAoDH,CAvDD,CAyDA,cAAeH,CAAAA,IAAf","sourcesContent":["import{GET_POSTS,\n       POST_ERROR,\n       UPDATE_LIKES,\n       DELETE_POST,\n       ADD_POST,\n       GET_POST,\n       ADD_COMMENT,\n       REMOVE_COMMENT\n    } from '../actions/types';\n\nconst initialState = {\n    posts :[],\n    post : null,\n    loading: true,\n    error : {}\n}\n\nconst post =(state = initialState, action)=>{\n    const {type, payload} = action;\n\n    switch(type){\n        case GET_POSTS:\n            return{\n                ...state,\n                posts : payload,\n                loading : false\n            }\n        case GET_POST:\n            return{\n                ...state,\n                post : payload,\n                loading : false\n            }\n        case ADD_POST:\n            return{\n                ...state,\n                posts : [payload,...state.posts],\n                loading: false\n            }\n        case DELETE_POST:\n            return{\n                ...state,\n                posts : state.posts.filter(post => post._id !== payload),\n                loading:false\n            }\n        case POST_ERROR:\n            return{\n                ...state,\n                error:payload,\n                loading : false\n            };\n        case UPDATE_LIKES:\n            return{\n                ...state,\n                posts : state.posts.map(post => post._id === payload.id ? {...post,likes : payload.likes} : post)\n            }\n        case ADD_COMMENT:\n            return{\n                ...state,\n                post : {...state.post, comments:payload}\n            }\n        case REMOVE_COMMENT:\n            return{\n                ...state,\n                post :{\n                    ...state.post.comments.filter(comment => comment._id !== payload)\n                },\n                loading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default post;"]},"metadata":{},"sourceType":"module"}