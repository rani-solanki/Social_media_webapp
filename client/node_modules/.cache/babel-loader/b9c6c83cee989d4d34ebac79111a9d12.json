{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS } from './types'; //GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: res.err\n    });\n  }\n}; //Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create profile or Update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Account & Profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can Not be Undone!!')) {\n    try {\n      await axios.delete('/api/profile/');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanantly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/rani/Desktop/SocialWebPage/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","getProfiles","msg","response","statusText","status","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    GET_PROFILE,\n    GET_PROFILES,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    CLEAR_PROFILE,\n    ACCOUNT_DELETED,\n    GET_REPOS\n} from './types';\n\n//GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type : GET_PROFILE,\n            payload : res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type : PROFILE_ERROR,\n            payload: res.err\n        })\n    }\n};\n\n//Get all profiles\n\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({type : CLEAR_PROFILE})\n    try {\n        const res = await axios.get('/api/profile');\n        dispatch({\n            type : GET_PROFILES,\n            payload : res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n\n//Get profile by ID\n\n\nexport const getProfileById = userId => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n        dispatch({\n            type : GET_PROFILE,\n            payload : res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n//Get Github repos\n\n\nexport const getGithubRepos = username => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n        dispatch({\n            type : GET_REPOS,\n            payload : res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n\n// Create profile or Update profile\n\nexport const createProfile =  (formData, history, edit = false) =>  async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n        if (!edit){\n                history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n}\n\n// Add Experience\nexport const addExperience = (formData,history) => async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(\"Experience Added\", 'success'));\n            history.push('/dashboard');\n        \n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n}\n\n// Add Education\nexport const addEducation = (formData,history) => async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(\"Education Added\", 'success'));\n            history.push('/dashboard');\n        \n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n// Delete experience\n\nexport const deleteExperience =  id => async dispatch => {\n\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type : UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload : {msg: err.response.statusText, status: err.response.status}\n        });\n        \n    }\n}\n\n\n// Delete education\n\nexport const deleteEducation =  id => async dispatch => {\n\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type : UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload : {msg: err.response.statusText, status: err.response.status}\n        });\n        \n    }\n}\n\n\n// Delete Account & Profile\n\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This can Not be Undone!!')){\n        try {\n            await axios.delete('/api/profile/');\n    \n            dispatch({type : CLEAR_PROFILE});\n            dispatch({type : ACCOUNT_DELETED});\n\n    \n            dispatch(setAlert('Your account has been permanantly deleted'));\n        } catch (err) {\n            dispatch({\n                type:PROFILE_ERROR,\n                payload : {msg: err.response.statusText, status: err.response.status}\n            });\n            \n        }\n    }\n   \n}\n\n"]},"metadata":{},"sourceType":"module"}