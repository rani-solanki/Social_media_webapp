{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Spinner } from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit/profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 59\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" No experience credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: education\n            }, education._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 58\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" No education credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: propTypes.func.isRequired,\n  profile: propTypes.object.isRequired,\n  auth: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","propTypes","connect","Spinner","getProfileById","Link","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment,useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport { connect} from 'react-redux';\nimport {Spinner } from '../layout/Spinner';\nimport {getProfileById} from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\n\n\nconst Profile = ({getProfileById,profile:{profile,loading},auth,match}) => {\n    useEffect(() => {\n        getProfileById (match.params.id)\n    },[getProfileById, match.params.id])\n    return (\n        <Fragment>\n            {profile === null || loading ?( <Spinner/> ): (\n            <Fragment>\n                <Link to=\"/profiles\" className='btn btn-light'>\n                    Back to Profiles\n                </Link>\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && \n                (<Link to=\"/edit/profile\" className=\"btn btn-dark\">\n                    Edit Profile\n                </Link>)}\n                <div class=\"profile-grid my-1\">\n                    <ProfileTop profile={profile}/>\n                    <ProfileAbout profile={profile}/>\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        {profile.experience.length > 0 ? (<Fragment>\n                            {profile.experience.map(experience=>(\n                                <ProfileExperience key={experience._id} experience={experience}/>\n                            ))}\n                        </Fragment>): (<h4> No experience credentials</h4>)}\n                    </div>\n\n\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>\n                        {profile.education.length > 0 ? (<Fragment>\n                            {profile.education.map(education=>(\n                                <ProfileEducation key={education._id} education={education}/>\n                            ))}\n                        </Fragment>): (<h4> No education credentials</h4>)}\n                    </div>\n\n                </div>\n            </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById : propTypes.func.isRequired,\n    profile : propTypes.object.isRequired,\n    auth : propTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ( {\n    profile : state.profile,\n    auth : state.auth\n});\n\nexport default connect(mapStateToProps,{getProfileById})(Profile)\n"]},"metadata":{},"sourceType":"module"}