{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from './types'; //GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create profile or Update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Account & Profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can Not be Undone!!')) {\n    try {\n      const res = await axios.delete('/api/profile/');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanantly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    GET_PROFILE,\n    GET_PROFILES,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    CLEAR_PROFILE,\n    ACCOUNT_DELETED\n} from './types';\n\n//GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type : GET_PROFILE,\n            payload : res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n//Get all profiles\n\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({type : CLEAR_PROFILE})\n    try {\n        const res = await axios.get('/api/profile');\n        dispatch({\n            type : GET_PROFILES,\n            payload : res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n\n// Create profile or Update profile\n\nexport const createProfile =  (formData, history, edit = false) =>  async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n        if (!edit){\n                history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n}\n\n// Add Experience\nexport const addExperience = (formData,history) => async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(\"Experience Added\", 'success'));\n            history.push('/dashboard');\n        \n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n}\n\n// Add Education\nexport const addEducation = (formData,history) => async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(\"Education Added\", 'success'));\n            history.push('/dashboard');\n        \n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n// Delete experience\n\nexport const deleteExperience =  id => async dispatch => {\n\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type : UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload : {msg: err.response.statusText, status: err.response.status}\n        });\n        \n    }\n}\n\n\n// Delete education\n\nexport const deleteEducation =  id => async dispatch => {\n\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type : UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload : {msg: err.response.statusText, status: err.response.status}\n        });\n        \n    }\n}\n\n\n// Delete Account & Profile\n\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This can Not be Undone!!')){\n        try {\n            const res = await axios.delete('/api/profile/');\n    \n            dispatch({type : CLEAR_PROFILE});\n            dispatch({type : ACCOUNT_DELETED});\n\n    \n            dispatch(setAlert('Your account has been permanantly deleted'));\n        } catch (err) {\n            dispatch({\n                type:PROFILE_ERROR,\n                payload : {msg: err.response.statusText, status: err.response.status}\n            });\n            \n        }\n    }\n   \n}\n\n"]},"metadata":{},"sourceType":"module"}