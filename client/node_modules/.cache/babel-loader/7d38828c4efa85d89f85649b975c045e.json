{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; //GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create profile or Update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE\n} from './types';\n\n//GET CURRENT USERS PROFILE\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type : GET_PROFILE,\n            payload : res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n};\n\n\n// Create profile or Update profile\n\nexport const createProfile =  (formData, history, edit = false) =>  async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n        if (!edit){\n                history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n}\n\n// Add Experience\nexport const addExperience = (formData,history) => async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(\"Experience Added\", 'success'));\n            history.push('/dashboard');\n        \n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n}\n\n// Add Education\nexport const addEducation = (formData,history) => async dispatch => {\n    try {\n        const config ={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type:UPDATE_PROFILE,\n            payload:res.data\n        })\n\n        dispatch(setAlert(\"Education Added\", 'success'));\n            history.push('/dashboard');\n        \n    } catch (err) {\n        const errors = err.response.data.errors; \n\n        if (errors){\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger'))     \n            );\n        }\n\n        dispatch({\n            type : PROFILE_ERROR,\n            payload : {msg :err.response.statusText, status : err.response.status}\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}