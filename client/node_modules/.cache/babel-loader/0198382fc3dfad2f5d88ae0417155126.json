{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Spinner } from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit/profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"profile-grid my-1\",\n        children: /*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: propTypes.func.isRequired,\n  profile: propTypes.object.isRequired,\n  auth: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","propTypes","connect","Spinner","getProfileById","Link","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAuB,mBAAvB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACF,EAAAA,cAAD;AAAgBG,EAAAA,OAAO,EAAC;AAACA,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAAxB;AAA0CC,EAAAA,IAA1C;AAA+CC,EAAAA;AAA/C,CAAD,KAA2D;AAAA;;AACvEV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAAEM,KAAK,CAACC,MAAN,CAAaC,EAAf,CAAd;AACH,GAFQ,EAEP,CAACR,cAAD,EAAiBM,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFO,CAAT;AAGA,sBACI,QAAC,QAAD;AAAA,cACKL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA+B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA/B,gBACD,QAAC,QAAD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKC,IAAI,CAACI,eAAL,IAAwBJ,IAAI,CAACD,OAAL,KAAiB,KAAzC,IAAkDC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAAjF,iBACA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAyB,QAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALL,eAQI;AAAK,QAAA,KAAK,EAAC,mBAAX;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAER;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtBD;;GAAMD,O;;KAAAA,O;AAwBNA,OAAO,CAACL,SAAR,GAAoB;AAChBG,EAAAA,cAAc,EAAGH,SAAS,CAACe,IAAV,CAAeC,UADhB;AAEhBV,EAAAA,OAAO,EAAGN,SAAS,CAACiB,MAAV,CAAiBD,UAFX;AAGhBR,EAAAA,IAAI,EAAGR,SAAS,CAACiB,MAAV,CAAiBD;AAHR,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAM;AAC/Bb,EAAAA,OAAO,EAAGa,KAAK,CAACb,OADe;AAE/BE,EAAAA,IAAI,EAAGW,KAAK,CAACX;AAFkB,CAAN,CAA7B;;AAKA,eAAeP,OAAO,CAACiB,eAAD,EAAiB;AAACf,EAAAA;AAAD,CAAjB,CAAP,CAA0CE,OAA1C,CAAf","sourcesContent":["import React, {Fragment,useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport { connect} from 'react-redux';\nimport {Spinner } from '../layout/Spinner';\nimport {getProfileById} from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({getProfileById,profile:{profile,loading},auth,match}) => {\n    useEffect(() => {\n        getProfileById (match.params.id)\n    },[getProfileById, match.params.id])\n    return (\n        <Fragment>\n            {profile === null || loading ?( <Spinner/> ): (\n            <Fragment>\n                <Link to=\"/profiles\" className='btn btn-light'>\n                    Back to Profiles\n                </Link>\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && \n                (<Link to=\"/edit/profile\" className=\"btn btn-dark\">\n                    Edit Profile\n                </Link>)}\n                <div class=\"profile-grid my-1\">\n                    <ProfileTop profile={profile}/>\n                </div>\n            </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById : propTypes.func.isRequired,\n    profile : propTypes.object.isRequired,\n    auth : propTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ( {\n    profile : state.profile,\n    auth : state.auth\n});\n\nexport default connect(mapStateToProps,{getProfileById})(Profile)\n"]},"metadata":{},"sourceType":"module"}