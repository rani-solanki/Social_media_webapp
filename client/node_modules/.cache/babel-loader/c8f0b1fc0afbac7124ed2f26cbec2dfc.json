{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Spinner } from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport { getPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 39\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      className: \"btn\",\n      children: \"Back to Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      showActions: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 52\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPost: propTypes.func.isRequired,\n  post: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/post/Post.js"],"names":["React","Fragment","useEffect","propTypes","connect","Spinner","PostItem","getPost","Link","Post","post","loading","match","params","id","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACF,EAAAA,OAAD;AAASG,EAAAA,IAAI,EAAC;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAd;AAA8BC,EAAAA;AAA9B,CAAD,KAA0C;AAAA;;AACnDV,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AAEH,GAHQ,EAGP,CAACP,OAAD,CAHO,CAAT;AAIA,SAAOI,OAAO,IAAID,IAAI,KAAK,IAApB,gBAA2B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA3B,gBAAwC,QAAC,QAAD;AAAA,4BAC3C,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD2C,eAI3C,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJ2C;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/C;AAMH,CAXD;;GAAMD,I;;KAAAA,I;AAaNA,IAAI,CAACN,SAAL,GAAiB;AACbI,EAAAA,OAAO,EAAGJ,SAAS,CAACY,IAAV,CAAeC,UADZ;AAEbN,EAAAA,IAAI,EAAGP,SAAS,CAACc,MAAV,CAAiBD;AAFX,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAGS,KAAK,CAACT;AADiB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACc,eAAD,EAAiB;AAACX,EAAAA;AAAD,CAAjB,CAAP,CAAmCE,IAAnC,CAAf","sourcesContent":["import React,{Fragment,useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {Spinner} from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport {getPost} from '../../actions/post';\nimport { Link } from 'react-router-dom';\n\nconst Post = ({getPost,post:{post, loading},match}) => {\n    useEffect(()=>{\n        getPost(match.params.id);\n\n    },[getPost])\n    return loading || post === null ? <Spinner/> : <Fragment>\n        <Link to='/posts' className=\"btn\">\n            Back to Posts\n        </Link>\n        <PostItem post={post} showActions={false}/>\n    </Fragment>\n}\n\nPost.propTypes = {\n    getPost : propTypes.func.isRequired,\n    post : propTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    post : state.post\n})\n\nexport default connect(mapStateToProps,{getPost})(Post)\n"]},"metadata":{},"sourceType":"module"}