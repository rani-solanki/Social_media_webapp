{"ast":null,"code":"import React,{Fragment,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{connect}from\"react-redux\";import{Spinner}from\"../layout/Spinner\";import{deleteAccount,getCurrentProfile}from\"../../actions/profile\";import DashboardActions from\"./DashboardActions\";import Experience from\"./Experience\";import Education from\"./Education\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(_ref){var getCurrentProfile=_ref.getCurrentProfile,deleteAccount=_ref.deleteAccount,user=_ref.auth.user,_ref$profile=_ref.profile,profile=_ref$profile.profile,loading=_ref$profile.loading;useEffect(function(){getCurrentProfile();},[getCurrentProfile]);return loading&&profile===null?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"large text-primary\",children:\"Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"}),\" Welcome \",user&&user.name]}),profile!==null?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(DashboardActions,{}),/*#__PURE__*/_jsx(Experience,{experience:profile.experience}),/*#__PURE__*/_jsx(Education,{education:profile.education}),/*#__PURE__*/_jsx(\"div\",{className:\"my-2\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return deleteAccount();},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user-minus\"}),\" Delete my Account\"]})})]}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"You have not yet setup a profile, Please add some info\"}),/*#__PURE__*/_jsx(Link,{to:\"/create-profile\",className:\"btn btn-primary my-1\",children:\"Create Profile\"})]})]});};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,profile:state.profile};};export default connect(mapStateToProps,{getCurrentProfile:getCurrentProfile,deleteAccount:deleteAccount})(Dashboard);","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","connect","Spinner","deleteAccount","getCurrentProfile","DashboardActions","Experience","Education","Dashboard","user","auth","profile","loading","name","experience","education","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,aAAT,CAAwBC,iBAAxB,KAAiD,uBAAjD,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAKZ,IAJFJ,CAAAA,iBAIE,MAJFA,iBAIE,CAHFD,aAGE,MAHFA,aAGE,CAFMM,IAEN,MAFFC,IAEE,CAFMD,IAEN,mBADFE,OACE,CADSA,OACT,cADSA,OACT,CADkBC,OAClB,cADkBA,OAClB,CACFb,SAAS,CAAC,UAAM,CACZK,iBAAiB,GACpB,CAFQ,CAEN,CAACA,iBAAD,CAFM,CAAT,CAIA,MAAOQ,CAAAA,OAAO,EAAID,OAAO,GAAK,IAAvB,cACH,KAAC,OAAD,IADG,cAGH,MAAC,QAAD,yBACI,WAAI,SAAS,CAAC,oBAAd,uBADJ,cAEI,WAAG,SAAS,CAAC,MAAb,wBACI,UAAG,SAAS,CAAC,aAAb,EADJ,aAC6CF,IAAI,EAAIA,IAAI,CAACI,IAD1D,GAFJ,CAKKF,OAAO,GAAK,IAAZ,cACG,MAAC,QAAD,yBACI,KAAC,gBAAD,IADJ,cAEI,KAAC,UAAD,EAAY,UAAU,CAAEA,OAAO,CAACG,UAAhC,EAFJ,cAGI,KAAC,SAAD,EAAW,SAAS,CAAEH,OAAO,CAACI,SAA9B,EAHJ,cAKI,YAAK,SAAS,CAAC,MAAf,uBACI,gBAAS,SAAS,CAAC,gBAAnB,CAAoC,OAAO,CAAE,yBAAKZ,CAAAA,aAAa,EAAlB,EAA7C,wBACI,UAAG,SAAS,CAAC,mBAAb,EADJ,wBADJ,EALJ,GADH,cAaG,MAAC,QAAD,yBACI,6EADJ,cAII,KAAC,IAAD,EAAM,EAAE,CAAC,iBAAT,CAA2B,SAAS,CAAC,sBAArC,4BAJJ,GAlBR,GAHJ,CAgCH,CA1CD,CAmDA,GAAMa,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCP,IAAI,CAAEO,KAAK,CAACP,IADoB,CAEhCC,OAAO,CAAEM,KAAK,CAACN,OAFiB,CAAZ,EAAxB,CAKA,cAAeV,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEZ,iBAAiB,CAAjBA,iBAAF,CAAoBD,aAAa,CAAbA,aAApB,CAAlB,CAAP,CAA8DK,SAA9D,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Spinner } from \"../layout/Spinner\";\nimport { deleteAccount, getCurrentProfile } from \"../../actions/profile\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nconst Dashboard = ({\n    getCurrentProfile,\n    deleteAccount,\n    auth: { user },\n    profile: { profile, loading }\n}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, [getCurrentProfile]);\n\n    return loading && profile === null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <h1 className='large text-primary'>Dashboard</h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i> Welcome {user && user.name}\n            </p>\n            {profile !== null ? (\n                <Fragment>\n                    <DashboardActions />\n                    <Experience experience={profile.experience}/>\n                    <Education education={profile.education }/>\n\n                    <div className=\"my-2\">\n                        <button  className=\"btn btn-danger\" onClick={()=> deleteAccount()}> \n                            <i className=\"fas fa-user-minus\"></i> Delete my Account\n                        </button>\n                    </div>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <p>\n                        You have not yet setup a profile, Please add some info\n                    </p>\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\n                        Create Profile\n                    </Link>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: propTypes.func.isRequired,\n    deleteAccount: propTypes.func.isRequired,\n    auth: propTypes.object.isRequired,\n    profile: propTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile,deleteAccount })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}