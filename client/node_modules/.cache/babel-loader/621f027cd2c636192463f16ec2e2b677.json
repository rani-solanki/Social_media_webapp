{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{getGithubRepos}from'../../actions/profile';import{Spinner}from'../layout/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProfileGithub=function ProfileGithub(_ref){var username=_ref.username,getGithubRepos=_ref.getGithubRepos,repos=_ref.repos;useEffect(function(){getGithubRepos(username);},[getGithubRepos]);return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-github\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary my-1\",children:\" Github Repos\"}),repos===null?/*#__PURE__*/_jsx(Spinner,{}):repos.map(function(repo){return/*#__PURE__*/_jsxs(\"div\",{className:\"repo bg-white p-1 my-1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:/*#__PURE__*/_jsx(\"a\",{href:repo.html_url,target:\"_blank\",rel:\"noopener noreferrer\",children:repo.name})}),/*#__PURE__*/_jsx(\"p\",{children:repo.description})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{className:\"badge badge-primary\",children:[\"Stars : \",repo.stargazers_count]}),/*#__PURE__*/_jsxs(\"li\",{className:\"badge badge-dark\",children:[\"Watchers : \",repo.watchers_count]}),/*#__PURE__*/_jsxs(\"li\",{className:\"badge badge-light\",children:[\"Forks : \",repo.forks_count]})]})})]},repo._id);})]});};var mapStateToProps=function mapStateToProps(state){return{repos:state.profile.repos};};export default connect(mapStateToProps,{getGithubRepos:getGithubRepos})(ProfileGithub);","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","mapStateToProps","state","profile"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,cAAR,KAA6B,uBAA7B,CACA,OAAQC,OAAR,KAAsB,mBAAtB,C,wFAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAqC,IAAnCC,CAAAA,QAAmC,MAAnCA,QAAmC,CAA1BH,cAA0B,MAA1BA,cAA0B,CAAXI,KAAW,MAAXA,KAAW,CACvDN,SAAS,CAAC,UAAI,CACdE,cAAc,CAACG,QAAD,CAAd,CACH,CAFY,CAEX,CAACH,cAAD,CAFW,CAAT,CAGA,mBAAO,aAAK,SAAS,CAAC,gBAAf,wBACH,WAAI,SAAS,CAAC,mBAAd,2BADG,CAEFI,KAAK,GAAK,IAAV,cAAiB,KAAC,OAAD,IAAjB,CACGA,KAAK,CAACC,GAAN,CAAU,SAAAC,IAAI,qBACV,aAAoB,SAAS,CAAC,wBAA9B,wBACA,oCACI,iCACI,UAAG,IAAI,CAAEA,IAAI,CAACC,QAAd,CAAwB,MAAM,CAAC,QAA/B,CAAwC,GAAG,CAAC,qBAA5C,UACKD,IAAI,CAACE,IADV,EADJ,EADJ,cAMI,mBACKF,IAAI,CAACG,WADV,EANJ,GADA,cAWA,kCACI,mCACI,YAAI,SAAS,CAAC,qBAAd,sBACaH,IAAI,CAACI,gBADlB,GADJ,cAII,YAAI,SAAS,CAAC,kBAAd,yBACgBJ,IAAI,CAACK,cADrB,GAJJ,cAOI,YAAI,SAAS,CAAC,mBAAd,sBACaL,IAAI,CAACM,WADlB,GAPJ,GADJ,EAXA,GAAUN,IAAI,CAACO,GAAf,CADU,EAAd,CAHD,GAAP,CA+BH,CAnCD,CA2CA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BX,KAAK,CAAGW,KAAK,CAACC,OAAN,CAAcZ,KADQ,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CAACe,eAAD,CAAiB,CAACd,cAAc,CAAdA,cAAD,CAAjB,CAAP,CAA0CE,aAA1C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getGithubRepos} from '../../actions/profile';\nimport {Spinner} from '../layout/Spinner';\n\n\nconst ProfileGithub = ({username,getGithubRepos,repos}) => {\n    useEffect(()=>{\n    getGithubRepos(username)\n},[getGithubRepos])\n    return <div className=\"profile-github\">\n        <h2 className='text-primary my-1'> Github Repos</h2>\n        {repos === null ? <Spinner/> : (\n            repos.map(repo => (\n                <div key={repo._id} className='repo bg-white p-1 my-1'>\n                <div>\n                    <h4>\n                        <a href={repo.html_url} target='_blank' rel=\"noopener noreferrer\">\n                            {repo.name}\n                        </a>\n                    </h4>\n                    <p>\n                        {repo.description}\n                    </p>\n                </div>\n                <div>\n                    <ul>\n                        <li className=\"badge badge-primary\">\n                            Stars : {repo.stargazers_count} \n                        </li>\n                        <li className=\"badge badge-dark\">\n                            Watchers : {repo.watchers_count} \n                        </li>\n                        <li className=\"badge badge-light\">\n                            Forks : {repo.forks_count} \n                        </li>\n                    </ul>\n                </div>\n                </div>\n        )))}\n    </div>\n}\n\nProfileGithub.propTypes = {\n    getGithubRepos : propTypes.func.isRequired,\n    repos : propTypes.array.isRequired,\n    username : propTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n    repos : state.profile.repos\n})\n\nexport default connect(mapStateToProps,{getGithubRepos})(ProfileGithub)\n"]},"metadata":{},"sourceType":"module"}