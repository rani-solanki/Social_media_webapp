{"ast":null,"code":"var _jsxFileName = \"/home/rani/Documents/Social media/client/src/components/profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport { Spinner } from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \" Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 27\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars : \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers : \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks : \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: propTypes.func.isRequired,\n  repos: propTypes.array.isRequired,\n  username: propTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/home/rani/Documents/Social media/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","propTypes","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUH,EAAAA,cAAV;AAAyBI,EAAAA;AAAzB,CAAD,KAAqC;AAAA;;AACvDP,EAAAA,SAAS,CAAC,MAAI;AACdG,IAAAA,cAAc,CAACG,QAAD,CAAd;AACH,GAFY,EAEX,CAACH,cAAD,CAFW,CAAT;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACH;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAEFI,KAAK,KAAK,IAAV,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACV;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA,8BACA;AAAA,gCACI;AAAA,iCACI;AAAG,YAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,YAAA,MAAM,EAAC,QAA/B;AAAwC,YAAA,GAAG,EAAC,qBAA5C;AAAA,sBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,oBACKF,IAAI,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAWA;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,mCACaH,IAAI,CAACI,gBADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,sCACgBJ,IAAI,CAACK,cADrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,mCACaL,IAAI,CAACM,WADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA,OAAUN,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,YADJ,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA+BH,CAnCD;;GAAMX,a;;KAAAA,a;AAqCNA,aAAa,CAACJ,SAAd,GAA0B;AACtBE,EAAAA,cAAc,EAAGF,SAAS,CAACgB,IAAV,CAAeC,UADV;AAEtBX,EAAAA,KAAK,EAAGN,SAAS,CAACkB,KAAV,CAAgBD,UAFF;AAGtBZ,EAAAA,QAAQ,EAAGL,SAAS,CAACmB,MAAV,CAAiBF;AAHN,CAA1B;;AAMA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9Bf,EAAAA,KAAK,EAAGe,KAAK,CAACC,OAAN,CAAchB;AADQ,CAAL,CAA7B;;AAGA,eAAeL,OAAO,CAACmB,eAAD,EAAiB;AAAClB,EAAAA;AAAD,CAAjB,CAAP,CAA0CE,aAA1C,CAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport propTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {getGithubRepos} from '../../actions/profile';\nimport {Spinner} from '../layout/Spinner';\n\nconst ProfileGithub = ({username,getGithubRepos,repos}) => {\n    useEffect(()=>{\n    getGithubRepos(username)\n},[getGithubRepos])\n    return <div className=\"profile-github\">\n        <h2 className='text-primary my-1'> Github Repos</h2>\n        {repos === null ? <Spinner/> : (\n            repos.map(repo => (\n                <div key={repo._id} className='repo bg-white p-1 my-1'>\n                <div>\n                    <h4>\n                        <a href={repo.html_url} target='_blank' rel=\"noopener noreferrer\">\n                            {repo.name}\n                        </a>\n                    </h4>\n                    <p>\n                        {repo.description}\n                    </p>\n                </div>\n                <div>\n                    <ul>\n                        <li className=\"badge badge-primary\">\n                            Stars : {repo.stargazers_count} \n                        </li>\n                        <li className=\"badge badge-dark\">\n                            Watchers : {repo.watchers_count} \n                        </li>\n                        <li className=\"badge badge-light\">\n                            Forks : {repo.forks_count} \n                        </li>\n                    </ul>\n                </div>\n                </div>\n        )))}\n    </div>\n}\n\nProfileGithub.propTypes = {\n    getGithubRepos : propTypes.func.isRequired,\n    repos : propTypes.array.isRequired,\n    username : propTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n    repos : state.profile.repos\n})\nexport default connect(mapStateToProps,{getGithubRepos})(ProfileGithub)\n"]},"metadata":{},"sourceType":"module"}