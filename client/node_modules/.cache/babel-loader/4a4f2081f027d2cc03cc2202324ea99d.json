{"ast":null,"code":"var _jsxFileName = \"/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  setAlert,\n  register\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), \" Create Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text\",\n          children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"ODuLNQJ+Sc8ybLT1PZwBrK01a94=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: propTypes.func.isRequired,\n  register: propTypes.func.isRequired,\n  isAuthenticated: propTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/kartik/Desktop/FSD-HV-ACADEMY/social-media-app/my-app/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","propTypes","Register","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","isAuthenticated","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {setAlert} from '../../actions/alert';\nimport {register} from '../../actions/auth';\nimport propTypes from 'prop-types';\n\n\n\nconst Register = ({setAlert, register}) => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name] : e.target.value});\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if(password !== password2){\n            setAlert('Passwords do not match','danger');\n        }else{\n            register({name, email, password});\n\n        }};\n\n    if(isAuthenticated){\n        return <Redirect to='/dashboard'/>;\n    }\n\n    return (\n        <Fragment>\n            <h1 className='large text-primary'>Sign Up</h1>\n            <p className='lead'>\n                <i className='fas fa-user'></i> Create Your Account\n            </p>\n            <form className='form' onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Name'\n                        name='name'\n                        value={name}\n                        onChange = {e => onChange(e)}\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='email'\n                        placeholder='Email Address'\n                        name='email'\n                        value = {email}\n                        onChange = {e => onChange(e)}\n                       \n                    />\n                    <small className='form-text'>\n                        This site uses Gravatar so if you want a profile image,\n                        use a Gravatar email\n                    </small>\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value = {password}\n                        onChange = {e => onChange(e)}\n                       \n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='password'\n                        placeholder='Confirm Password'\n                        name='password2'\n                        value = {password2}\n                        onChange = {e => onChange(e)}\n                        \n                    />\n                </div>\n                <input\n                    type='submit'\n                    className='btn btn-primary'\n                    value='Register'\n                />\n            </form>\n            <p className='my-1'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </Fragment>\n    );\n};\n\nRegister.propTypes = {\n    setAlert: propTypes.func.isRequired,\n    register: propTypes.func.isRequired,\n    isAuthenticated :propTypes.bool\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated : state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps,{setAlert, register})(Register);\n"]},"metadata":{},"sourceType":"module"}